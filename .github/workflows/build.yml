name: Build Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"
    paths:
      - ".github/workflows/build.yml"
      - "src/**"
      - "scripts/**"
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  metadata:
    steps:
      - id: git
        run: echo "build_commit_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
    outputs:
      build_commit_sha: ${{ steps.git.outputs.build_commit_sha }}
    runs-on: ubuntu-latest

  latest:
    needs:
      - metadata
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - uses: docker/setup-buildx-action@v2
        with:
          install: true
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: ./src/latest/scripts/init-filesystem
      - uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: src/${{ github.job }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ github.job }}:${{ needs.metadata.outputs.build_commit_sha }}
      - if: ${{ github.ref_name == 'master' }}
        run: |
          echo ${DOCKER_PASSWORD} | docker login --password-stdin --username ${DOCKER_USERNAME}
          docker buildx imagetools create --tag ${{ github.repository }}:${{ github.job }} \
            ghcr.io/${{ github.repository }}/${{ github.job }}:${{ needs.metadata.outputs.build_commit_sha }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    runs-on: ubuntu-22.04

  forks:
    needs:
      - latest
      - metadata
    permissions:
      packages: write
    strategy:
      matrix:
        source: [developer]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - uses: docker/setup-buildx-action@v2
        with:
          install: true
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: ./src/${{ matrix.source }}/scripts/init-filesystem
      - uses: docker/build-push-action@v4
        with:
          build-args: |
            BASEIMAGE=ghcr.io/${{ github.repository }}/latest:${{ needs.metadata.outputs.build_commit_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: src/${{ matrix.source }}
          platforms: linux/amd64,linux/arm64
          pull: false
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ matrix.source }}:${{ needs.metadata.outputs.build_commit_sha }}
      - if: ${{ github.ref_name == 'master' }}
        run: |
          echo ${DOCKER_PASSWORD} | docker login --password-stdin --username ${DOCKER_USERNAME}
          docker buildx imagetools create --tag ${{ github.repository }}:${{ matrix.source }} \
            ghcr.io/${{ github.repository }}/${{ matrix.source }}:${{ needs.metadata.outputs.build_commit_sha }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    runs-on: ubuntu-22.04

  reverse-dependencies:
    if: ${{ github.ref_name == 'master' }}
    needs:
      - forks
    steps:
      - run: |
          # ashenm/workspace:latest
          curl --fail --request POST --header "Accept: application/vnd.github.v3+json" \
            --header "Authorization: token ${OCTOCAT_TOKEN}" --data "{ \"ref\": \"master\" }" \
            --url "https://api.github.com/repos/ashenm/workspace/actions/workflows/build.yml/dispatches"
        env:
          OCTOCAT_TOKEN: ${{ secrets.OCTOCAT_TOKEN }}
    runs-on: ubuntu-22.04

  slack:
    needs:
      - latest
      - forks
      - reverse-dependencies
    if: ${{ always() }}
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: "#github"
          name: "GitHub Workflow"
    runs-on: ubuntu-22.04
# vim: set expandtab shiftwidth=2 syntax=yaml:
